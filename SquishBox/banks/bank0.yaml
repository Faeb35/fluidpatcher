# example bank file that demonstrates many of the features of fluidpatcher
# view the wiki at https://github.com/albedozero/fluidpatcher/wiki for detailed info

patches: # indented list of patches
  Simple EP: # simplest form of patch - assign a voice to a MIDI channel
    1: FM Piano.sf2:000:000 # <MIDI Channel>: <soundfont>:<bank>:<program>
    
  Multi Part: # can have a different voice on each MIDI channel
                 # useful if your controller can split/play to different channels
    1: VintageDreamsWaves-v2.sf2:000:058
    2: VintageDreamsWaves-v2.sf2:000:013
    10: VintageDreamsWaves-v2.sf2:128:002

  Split Keys: # you can also split the keyboard any way you want using MIDI routing
    3: FM Piano.sf2:000:000
    4: VintageDreamsWaves-v2.sf2:000:028
    router_rules: # this sends notes on the upper half of the keyboard to channel 3, lower half to channel 4
    - {type: note, chan: 1=3, par1: C4-G9} # note names can be used
    - {type: note, chan: 1=4, par1: C0-B3*1-12} # drop these down an octave for bass-ness
    cc: [3/91=127, 3/93=127] # sends control change messages when the patch is selected
                             # this will set the reverb and chorus level to max on channel 3

  Weird Keys: # you can get some interesting effects with MIDI routing
    5: VintageDreamsWaves-v2.sf2:000:014
    router_rules:
    - {type: note, chan: 1=5, par1: Eb4-G9}
    - {type: note, chan: 1=5, par1: D#4-G9*1+5} # 5ths
    - {type: note, chan: 1=5, par1: C0-D4=D6-C2} # reverse scale
    - {type: pbend, chan: 1=5}

  Analog Saw:
    1: ModSynth_R1.sf2:000:000
    router_rules:
    - clear # clears all previous router rules, including defaults
    - {type: note, par2: 1-127=127} # all notes max volume like a retro synth
    - {type: cc} # pass CC messages unmodified
    - {type: pbend}
    ladspafx: # recent versions of fluidsynth support LADSPA effects
      delayline1: &delayeffect # this is a YaML anchor
        lib: delay.so
        audio: mono
        vals: {Delay: 0.3} # can set initial values for control ports
      delayline2: *delayeffect # copies the contents of the anchor node here
      delayline3: *delayeffect # creating a sort of bucket delay
    router_rules:
    - {type: cc, chan: 1, par1: 15, par2: 0-127=0-5, ladspafx: delayline1, port: Delay}
    - {type: cc, chan: 1, par1: 15, par2: 0-127=0-5, ladspafx: delayline2, port: Delay}
    - {type: cc, chan: 1, par1: 15, par2: 0-127=0-5, ladspafx: delayline3, port: Delay}
    - {type: cc, chan: 1, par1: 16, par2: 0-127=0-1, ladspafx: delayline1, port: Dry/Wet}
    - {type: cc, chan: 1, par1: 16, par2: 0-127=0-1, ladspafx: delayline2, port: Dry/Wet}
    - {type: cc, chan: 1, par1: 16, par2: 0-127=0-1, ladspafx: delayline3, port: Dry/Wet}

router_rules: # router rules at this indent level apply to all patches
- {type: cc, chan: 1=2-16, par1: 7} # CC 7 is volume - route it to all used channels so it's global
- {type: cc, chan: 1, par1: 23, par2: 0-127=0-1, fluidsetting: synth.reverb.room-size}

# settings to pass to fluidsynth
# full list at http://www.fluidsynth.org/api/fluidsettings.xml
fluidsettings:
  synth.reverb.level: 0.9
  synth.reverb.width: 0.5

init: # init block is processed once, when bank is first loaded
  fluidsettings:
    synth.reverb.room-size: 0.8
  cc:
  - 1/74=0 # initial filter cutoff frequency
